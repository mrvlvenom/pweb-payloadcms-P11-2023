"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    componentSchema: function() {
        return componentSchema;
    },
    documentTabSchema: function() {
        return documentTabSchema;
    },
    customViewSchema: function() {
        return customViewSchema;
    },
    livePreviewSchema: function() {
        return livePreviewSchema;
    }
});
const _joi = /*#__PURE__*/ _interop_require_default(require("joi"));
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
const componentSchema = _joi.default.alternatives().try(_joi.default.object().unknown(), _joi.default.func());
const documentTabSchema = {
    condition: _joi.default.func(),
    href: _joi.default.alternatives().try(_joi.default.string(), _joi.default.func()).required(),
    isActive: _joi.default.alternatives().try(_joi.default.func(), _joi.default.boolean()),
    label: _joi.default.alternatives().try(_joi.default.string(), _joi.default.func()).required(),
    newTab: _joi.default.boolean(),
    pillLabel: _joi.default.alternatives().try(_joi.default.string(), _joi.default.func())
};
const customViewSchema = _joi.default.object({
    Component: componentSchema.required(),
    Tab: _joi.default.alternatives().try(documentTabSchema, componentSchema),
    path: _joi.default.string().required()
});
const livePreviewSchema = {
    breakpoints: _joi.default.array().items(_joi.default.object({
        name: _joi.default.string(),
        height: _joi.default.alternatives().try(_joi.default.number(), _joi.default.string()),
        label: _joi.default.string(),
        width: _joi.default.alternatives().try(_joi.default.number(), _joi.default.string())
    })),
    url: _joi.default.alternatives().try(_joi.default.string(), _joi.default.func())
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb25maWcvc2hhcmVkL2NvbXBvbmVudFNjaGVtYS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgam9pIGZyb20gJ2pvaSdcblxuZXhwb3J0IGNvbnN0IGNvbXBvbmVudFNjaGVtYSA9IGpvaS5hbHRlcm5hdGl2ZXMoKS50cnkoam9pLm9iamVjdCgpLnVua25vd24oKSwgam9pLmZ1bmMoKSlcblxuZXhwb3J0IGNvbnN0IGRvY3VtZW50VGFiU2NoZW1hID0ge1xuICBjb25kaXRpb246IGpvaS5mdW5jKCksXG4gIGhyZWY6IGpvaS5hbHRlcm5hdGl2ZXMoKS50cnkoam9pLnN0cmluZygpLCBqb2kuZnVuYygpKS5yZXF1aXJlZCgpLFxuICBpc0FjdGl2ZTogam9pLmFsdGVybmF0aXZlcygpLnRyeShqb2kuZnVuYygpLCBqb2kuYm9vbGVhbigpKSxcbiAgbGFiZWw6IGpvaS5hbHRlcm5hdGl2ZXMoKS50cnkoam9pLnN0cmluZygpLCBqb2kuZnVuYygpKS5yZXF1aXJlZCgpLFxuICBuZXdUYWI6IGpvaS5ib29sZWFuKCksXG4gIHBpbGxMYWJlbDogam9pLmFsdGVybmF0aXZlcygpLnRyeShqb2kuc3RyaW5nKCksIGpvaS5mdW5jKCkpLFxufVxuXG5leHBvcnQgY29uc3QgY3VzdG9tVmlld1NjaGVtYSA9IGpvaS5vYmplY3Qoe1xuICBDb21wb25lbnQ6IGNvbXBvbmVudFNjaGVtYS5yZXF1aXJlZCgpLFxuICBUYWI6IGpvaS5hbHRlcm5hdGl2ZXMoKS50cnkoZG9jdW1lbnRUYWJTY2hlbWEsIGNvbXBvbmVudFNjaGVtYSksXG4gIHBhdGg6IGpvaS5zdHJpbmcoKS5yZXF1aXJlZCgpLFxufSlcblxuZXhwb3J0IGNvbnN0IGxpdmVQcmV2aWV3U2NoZW1hID0ge1xuICBicmVha3BvaW50czogam9pLmFycmF5KCkuaXRlbXMoXG4gICAgam9pLm9iamVjdCh7XG4gICAgICBuYW1lOiBqb2kuc3RyaW5nKCksXG4gICAgICBoZWlnaHQ6IGpvaS5hbHRlcm5hdGl2ZXMoKS50cnkoam9pLm51bWJlcigpLCBqb2kuc3RyaW5nKCkpLFxuICAgICAgbGFiZWw6IGpvaS5zdHJpbmcoKSxcbiAgICAgIHdpZHRoOiBqb2kuYWx0ZXJuYXRpdmVzKCkudHJ5KGpvaS5udW1iZXIoKSwgam9pLnN0cmluZygpKSxcbiAgICB9KSxcbiAgKSxcbiAgdXJsOiBqb2kuYWx0ZXJuYXRpdmVzKCkudHJ5KGpvaS5zdHJpbmcoKSwgam9pLmZ1bmMoKSksXG59XG4iXSwibmFtZXMiOlsiY29tcG9uZW50U2NoZW1hIiwiZG9jdW1lbnRUYWJTY2hlbWEiLCJjdXN0b21WaWV3U2NoZW1hIiwibGl2ZVByZXZpZXdTY2hlbWEiLCJqb2kiLCJhbHRlcm5hdGl2ZXMiLCJ0cnkiLCJvYmplY3QiLCJ1bmtub3duIiwiZnVuYyIsImNvbmRpdGlvbiIsImhyZWYiLCJzdHJpbmciLCJyZXF1aXJlZCIsImlzQWN0aXZlIiwiYm9vbGVhbiIsImxhYmVsIiwibmV3VGFiIiwicGlsbExhYmVsIiwiQ29tcG9uZW50IiwiVGFiIiwicGF0aCIsImJyZWFrcG9pbnRzIiwiYXJyYXkiLCJpdGVtcyIsIm5hbWUiLCJoZWlnaHQiLCJudW1iZXIiLCJ3aWR0aCIsInVybCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7SUFFYUEsZUFBZTtlQUFmQTs7SUFFQUMsaUJBQWlCO2VBQWpCQTs7SUFTQUMsZ0JBQWdCO2VBQWhCQTs7SUFNQUMsaUJBQWlCO2VBQWpCQTs7OzREQW5CRzs7Ozs7O0FBRVQsTUFBTUgsa0JBQWtCSSxZQUFHLENBQUNDLFlBQVksR0FBR0MsR0FBRyxDQUFDRixZQUFHLENBQUNHLE1BQU0sR0FBR0MsT0FBTyxJQUFJSixZQUFHLENBQUNLLElBQUk7QUFFL0UsTUFBTVIsb0JBQW9CO0lBQy9CUyxXQUFXTixZQUFHLENBQUNLLElBQUk7SUFDbkJFLE1BQU1QLFlBQUcsQ0FBQ0MsWUFBWSxHQUFHQyxHQUFHLENBQUNGLFlBQUcsQ0FBQ1EsTUFBTSxJQUFJUixZQUFHLENBQUNLLElBQUksSUFBSUksUUFBUTtJQUMvREMsVUFBVVYsWUFBRyxDQUFDQyxZQUFZLEdBQUdDLEdBQUcsQ0FBQ0YsWUFBRyxDQUFDSyxJQUFJLElBQUlMLFlBQUcsQ0FBQ1csT0FBTztJQUN4REMsT0FBT1osWUFBRyxDQUFDQyxZQUFZLEdBQUdDLEdBQUcsQ0FBQ0YsWUFBRyxDQUFDUSxNQUFNLElBQUlSLFlBQUcsQ0FBQ0ssSUFBSSxJQUFJSSxRQUFRO0lBQ2hFSSxRQUFRYixZQUFHLENBQUNXLE9BQU87SUFDbkJHLFdBQVdkLFlBQUcsQ0FBQ0MsWUFBWSxHQUFHQyxHQUFHLENBQUNGLFlBQUcsQ0FBQ1EsTUFBTSxJQUFJUixZQUFHLENBQUNLLElBQUk7QUFDMUQ7QUFFTyxNQUFNUCxtQkFBbUJFLFlBQUcsQ0FBQ0csTUFBTSxDQUFDO0lBQ3pDWSxXQUFXbkIsZ0JBQWdCYSxRQUFRO0lBQ25DTyxLQUFLaEIsWUFBRyxDQUFDQyxZQUFZLEdBQUdDLEdBQUcsQ0FBQ0wsbUJBQW1CRDtJQUMvQ3FCLE1BQU1qQixZQUFHLENBQUNRLE1BQU0sR0FBR0MsUUFBUTtBQUM3QjtBQUVPLE1BQU1WLG9CQUFvQjtJQUMvQm1CLGFBQWFsQixZQUFHLENBQUNtQixLQUFLLEdBQUdDLEtBQUssQ0FDNUJwQixZQUFHLENBQUNHLE1BQU0sQ0FBQztRQUNUa0IsTUFBTXJCLFlBQUcsQ0FBQ1EsTUFBTTtRQUNoQmMsUUFBUXRCLFlBQUcsQ0FBQ0MsWUFBWSxHQUFHQyxHQUFHLENBQUNGLFlBQUcsQ0FBQ3VCLE1BQU0sSUFBSXZCLFlBQUcsQ0FBQ1EsTUFBTTtRQUN2REksT0FBT1osWUFBRyxDQUFDUSxNQUFNO1FBQ2pCZ0IsT0FBT3hCLFlBQUcsQ0FBQ0MsWUFBWSxHQUFHQyxHQUFHLENBQUNGLFlBQUcsQ0FBQ3VCLE1BQU0sSUFBSXZCLFlBQUcsQ0FBQ1EsTUFBTTtJQUN4RDtJQUVGaUIsS0FBS3pCLFlBQUcsQ0FBQ0MsWUFBWSxHQUFHQyxHQUFHLENBQUNGLFlBQUcsQ0FBQ1EsTUFBTSxJQUFJUixZQUFHLENBQUNLLElBQUk7QUFDcEQifQ==