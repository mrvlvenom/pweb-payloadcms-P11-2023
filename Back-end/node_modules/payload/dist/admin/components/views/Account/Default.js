"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _reacti18next = require("react-i18next");
const _DocumentControls = require("../../elements/DocumentControls");
const _DocumentFields = require("../../elements/DocumentFields");
const _DocumentHeader = require("../../elements/DocumentHeader");
const _Loading = require("../../elements/Loading");
const _Form = /*#__PURE__*/ _interop_require_default(require("../../forms/Form"));
const _LeaveWithoutSaving = require("../../modals/LeaveWithoutSaving");
const _Auth = require("../../utilities/Auth");
const _Meta = /*#__PURE__*/ _interop_require_default(require("../../utilities/Meta"));
const _OperationProvider = require("../../utilities/OperationProvider");
const _Auth1 = /*#__PURE__*/ _interop_require_default(require("../collections/Edit/Auth"));
const _Settings = require("./Settings");
require("./index.scss");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
const baseClass = 'account';
const DefaultAccount = (props)=>{
    const { action, apiURL, collection, data, fieldTypes, hasSavePermission, initialState, isLoading, onSave: onSaveFromProps, permissions } = props;
    const { auth, fields } = collection;
    const { refreshCookieAsync } = (0, _Auth.useAuth)();
    const { t } = (0, _reacti18next.useTranslation)('authentication');
    const onSave = (0, _react.useCallback)(async ()=>{
        await refreshCookieAsync();
        if (typeof onSaveFromProps === 'function') {
            onSaveFromProps({});
        }
    }, [
        onSaveFromProps,
        refreshCookieAsync
    ]);
    return /*#__PURE__*/ _react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/ _react.default.createElement(_Meta.default, {
        description: t('accountOfCurrentUser'),
        keywords: t('account'),
        title: t('account')
    }), /*#__PURE__*/ _react.default.createElement(_Loading.LoadingOverlayToggle, {
        name: "account",
        show: isLoading,
        type: "withoutNav"
    }), !isLoading && /*#__PURE__*/ _react.default.createElement(_OperationProvider.OperationContext.Provider, {
        value: "update"
    }, /*#__PURE__*/ _react.default.createElement(_Form.default, {
        action: action,
        disabled: !hasSavePermission,
        initialState: initialState,
        method: "patch",
        onSuccess: onSave
    }, !(collection.versions?.drafts && collection.versions?.drafts?.autosave) && /*#__PURE__*/ _react.default.createElement(_LeaveWithoutSaving.LeaveWithoutSaving, null), /*#__PURE__*/ _react.default.createElement(_DocumentHeader.DocumentHeader, {
        apiURL: apiURL,
        collection: collection,
        data: data
    }), /*#__PURE__*/ _react.default.createElement(_DocumentControls.DocumentControls, {
        apiURL: apiURL,
        collection: collection,
        data: data,
        hasSavePermission: hasSavePermission,
        isAccountView: true,
        permissions: permissions
    }), /*#__PURE__*/ _react.default.createElement(_DocumentFields.DocumentFields, {
        AfterFields: /*#__PURE__*/ _react.default.createElement(_Settings.Settings, {
            className: `${baseClass}__settings`
        }),
        BeforeFields: /*#__PURE__*/ _react.default.createElement(_Auth1.default, {
            className: `${baseClass}__auth`,
            collection: collection,
            email: data?.email,
            operation: "update",
            readOnly: !hasSavePermission,
            useAPIKey: auth.useAPIKey
        }),
        fieldTypes: fieldTypes,
        fields: fields,
        hasSavePermission: hasSavePermission,
        permissions: permissions
    }))));
};
const _default = DefaultAccount;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9hZG1pbi9jb21wb25lbnRzL3ZpZXdzL0FjY291bnQvRGVmYXVsdC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZUNhbGxiYWNrIH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgeyB1c2VUcmFuc2xhdGlvbiB9IGZyb20gJ3JlYWN0LWkxOG5leHQnXG5cbmltcG9ydCB0eXBlIHsgRmllbGRUeXBlcyB9IGZyb20gJy4uLy4uL2Zvcm1zL2ZpZWxkLXR5cGVzJ1xuaW1wb3J0IHR5cGUgeyBDb2xsZWN0aW9uRWRpdFZpZXdQcm9wcyB9IGZyb20gJy4uL3R5cGVzJ1xuXG5pbXBvcnQgeyBEb2N1bWVudENvbnRyb2xzIH0gZnJvbSAnLi4vLi4vZWxlbWVudHMvRG9jdW1lbnRDb250cm9scydcbmltcG9ydCB7IERvY3VtZW50RmllbGRzIH0gZnJvbSAnLi4vLi4vZWxlbWVudHMvRG9jdW1lbnRGaWVsZHMnXG5pbXBvcnQgeyBEb2N1bWVudEhlYWRlciB9IGZyb20gJy4uLy4uL2VsZW1lbnRzL0RvY3VtZW50SGVhZGVyJ1xuaW1wb3J0IHsgTG9hZGluZ092ZXJsYXlUb2dnbGUgfSBmcm9tICcuLi8uLi9lbGVtZW50cy9Mb2FkaW5nJ1xuaW1wb3J0IEZvcm0gZnJvbSAnLi4vLi4vZm9ybXMvRm9ybSdcbmltcG9ydCB7IExlYXZlV2l0aG91dFNhdmluZyB9IGZyb20gJy4uLy4uL21vZGFscy9MZWF2ZVdpdGhvdXRTYXZpbmcnXG5pbXBvcnQgeyB1c2VBdXRoIH0gZnJvbSAnLi4vLi4vdXRpbGl0aWVzL0F1dGgnXG5pbXBvcnQgTWV0YSBmcm9tICcuLi8uLi91dGlsaXRpZXMvTWV0YSdcbmltcG9ydCB7IE9wZXJhdGlvbkNvbnRleHQgfSBmcm9tICcuLi8uLi91dGlsaXRpZXMvT3BlcmF0aW9uUHJvdmlkZXInXG5pbXBvcnQgQXV0aCBmcm9tICcuLi9jb2xsZWN0aW9ucy9FZGl0L0F1dGgnXG5pbXBvcnQgeyBTZXR0aW5ncyB9IGZyb20gJy4vU2V0dGluZ3MnXG5pbXBvcnQgJy4vaW5kZXguc2NzcydcblxuY29uc3QgYmFzZUNsYXNzID0gJ2FjY291bnQnXG5cbmV4cG9ydCB0eXBlIERlZmF1bHRBY2NvdW50Vmlld1Byb3BzID0gQ29sbGVjdGlvbkVkaXRWaWV3UHJvcHMgJiB7XG4gIGZpZWxkVHlwZXM6IEZpZWxkVHlwZXNcbn1cblxuY29uc3QgRGVmYXVsdEFjY291bnQ6IFJlYWN0LkZDPERlZmF1bHRBY2NvdW50Vmlld1Byb3BzPiA9IChwcm9wcykgPT4ge1xuICBjb25zdCB7XG4gICAgYWN0aW9uLFxuICAgIGFwaVVSTCxcbiAgICBjb2xsZWN0aW9uLFxuICAgIGRhdGEsXG4gICAgZmllbGRUeXBlcyxcbiAgICBoYXNTYXZlUGVybWlzc2lvbixcbiAgICBpbml0aWFsU3RhdGUsXG4gICAgaXNMb2FkaW5nLFxuICAgIG9uU2F2ZTogb25TYXZlRnJvbVByb3BzLFxuICAgIHBlcm1pc3Npb25zLFxuICB9ID0gcHJvcHNcblxuICBjb25zdCB7IGF1dGgsIGZpZWxkcyB9ID0gY29sbGVjdGlvblxuXG4gIGNvbnN0IHsgcmVmcmVzaENvb2tpZUFzeW5jIH0gPSB1c2VBdXRoKClcbiAgY29uc3QgeyB0IH0gPSB1c2VUcmFuc2xhdGlvbignYXV0aGVudGljYXRpb24nKVxuXG4gIGNvbnN0IG9uU2F2ZSA9IHVzZUNhbGxiYWNrKGFzeW5jICgpID0+IHtcbiAgICBhd2FpdCByZWZyZXNoQ29va2llQXN5bmMoKVxuICAgIGlmICh0eXBlb2Ygb25TYXZlRnJvbVByb3BzID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBvblNhdmVGcm9tUHJvcHMoe30pXG4gICAgfVxuICB9LCBbb25TYXZlRnJvbVByb3BzLCByZWZyZXNoQ29va2llQXN5bmNdKVxuXG4gIHJldHVybiAoXG4gICAgPFJlYWN0LkZyYWdtZW50PlxuICAgICAgPE1ldGEgZGVzY3JpcHRpb249e3QoJ2FjY291bnRPZkN1cnJlbnRVc2VyJyl9IGtleXdvcmRzPXt0KCdhY2NvdW50Jyl9IHRpdGxlPXt0KCdhY2NvdW50Jyl9IC8+XG4gICAgICA8TG9hZGluZ092ZXJsYXlUb2dnbGUgbmFtZT1cImFjY291bnRcIiBzaG93PXtpc0xvYWRpbmd9IHR5cGU9XCJ3aXRob3V0TmF2XCIgLz5cbiAgICAgIHshaXNMb2FkaW5nICYmIChcbiAgICAgICAgPE9wZXJhdGlvbkNvbnRleHQuUHJvdmlkZXIgdmFsdWU9XCJ1cGRhdGVcIj5cbiAgICAgICAgICA8Rm9ybVxuICAgICAgICAgICAgYWN0aW9uPXthY3Rpb259XG4gICAgICAgICAgICBkaXNhYmxlZD17IWhhc1NhdmVQZXJtaXNzaW9ufVxuICAgICAgICAgICAgaW5pdGlhbFN0YXRlPXtpbml0aWFsU3RhdGV9XG4gICAgICAgICAgICBtZXRob2Q9XCJwYXRjaFwiXG4gICAgICAgICAgICBvblN1Y2Nlc3M9e29uU2F2ZX1cbiAgICAgICAgICA+XG4gICAgICAgICAgICB7IShjb2xsZWN0aW9uLnZlcnNpb25zPy5kcmFmdHMgJiYgY29sbGVjdGlvbi52ZXJzaW9ucz8uZHJhZnRzPy5hdXRvc2F2ZSkgJiYgKFxuICAgICAgICAgICAgICA8TGVhdmVXaXRob3V0U2F2aW5nIC8+XG4gICAgICAgICAgICApfVxuICAgICAgICAgICAgPERvY3VtZW50SGVhZGVyIGFwaVVSTD17YXBpVVJMfSBjb2xsZWN0aW9uPXtjb2xsZWN0aW9ufSBkYXRhPXtkYXRhfSAvPlxuICAgICAgICAgICAgPERvY3VtZW50Q29udHJvbHNcbiAgICAgICAgICAgICAgYXBpVVJMPXthcGlVUkx9XG4gICAgICAgICAgICAgIGNvbGxlY3Rpb249e2NvbGxlY3Rpb259XG4gICAgICAgICAgICAgIGRhdGE9e2RhdGF9XG4gICAgICAgICAgICAgIGhhc1NhdmVQZXJtaXNzaW9uPXtoYXNTYXZlUGVybWlzc2lvbn1cbiAgICAgICAgICAgICAgaXNBY2NvdW50Vmlld1xuICAgICAgICAgICAgICBwZXJtaXNzaW9ucz17cGVybWlzc2lvbnN9XG4gICAgICAgICAgICAvPlxuICAgICAgICAgICAgPERvY3VtZW50RmllbGRzXG4gICAgICAgICAgICAgIEFmdGVyRmllbGRzPXs8U2V0dGluZ3MgY2xhc3NOYW1lPXtgJHtiYXNlQ2xhc3N9X19zZXR0aW5nc2B9IC8+fVxuICAgICAgICAgICAgICBCZWZvcmVGaWVsZHM9e1xuICAgICAgICAgICAgICAgIDxBdXRoXG4gICAgICAgICAgICAgICAgICBjbGFzc05hbWU9e2Ake2Jhc2VDbGFzc31fX2F1dGhgfVxuICAgICAgICAgICAgICAgICAgY29sbGVjdGlvbj17Y29sbGVjdGlvbn1cbiAgICAgICAgICAgICAgICAgIGVtYWlsPXtkYXRhPy5lbWFpbH1cbiAgICAgICAgICAgICAgICAgIG9wZXJhdGlvbj1cInVwZGF0ZVwiXG4gICAgICAgICAgICAgICAgICByZWFkT25seT17IWhhc1NhdmVQZXJtaXNzaW9ufVxuICAgICAgICAgICAgICAgICAgdXNlQVBJS2V5PXthdXRoLnVzZUFQSUtleX1cbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIGZpZWxkVHlwZXM9e2ZpZWxkVHlwZXN9XG4gICAgICAgICAgICAgIGZpZWxkcz17ZmllbGRzfVxuICAgICAgICAgICAgICBoYXNTYXZlUGVybWlzc2lvbj17aGFzU2F2ZVBlcm1pc3Npb259XG4gICAgICAgICAgICAgIHBlcm1pc3Npb25zPXtwZXJtaXNzaW9uc31cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9Gb3JtPlxuICAgICAgICA8L09wZXJhdGlvbkNvbnRleHQuUHJvdmlkZXI+XG4gICAgICApfVxuICAgIDwvUmVhY3QuRnJhZ21lbnQ+XG4gIClcbn1cblxuZXhwb3J0IGRlZmF1bHQgRGVmYXVsdEFjY291bnRcbiJdLCJuYW1lcyI6WyJiYXNlQ2xhc3MiLCJEZWZhdWx0QWNjb3VudCIsInByb3BzIiwiYWN0aW9uIiwiYXBpVVJMIiwiY29sbGVjdGlvbiIsImRhdGEiLCJmaWVsZFR5cGVzIiwiaGFzU2F2ZVBlcm1pc3Npb24iLCJpbml0aWFsU3RhdGUiLCJpc0xvYWRpbmciLCJvblNhdmUiLCJvblNhdmVGcm9tUHJvcHMiLCJwZXJtaXNzaW9ucyIsImF1dGgiLCJmaWVsZHMiLCJyZWZyZXNoQ29va2llQXN5bmMiLCJ1c2VBdXRoIiwidCIsInVzZVRyYW5zbGF0aW9uIiwidXNlQ2FsbGJhY2siLCJSZWFjdCIsIkZyYWdtZW50IiwiTWV0YSIsImRlc2NyaXB0aW9uIiwia2V5d29yZHMiLCJ0aXRsZSIsIkxvYWRpbmdPdmVybGF5VG9nZ2xlIiwibmFtZSIsInNob3ciLCJ0eXBlIiwiT3BlcmF0aW9uQ29udGV4dCIsIlByb3ZpZGVyIiwidmFsdWUiLCJGb3JtIiwiZGlzYWJsZWQiLCJtZXRob2QiLCJvblN1Y2Nlc3MiLCJ2ZXJzaW9ucyIsImRyYWZ0cyIsImF1dG9zYXZlIiwiTGVhdmVXaXRob3V0U2F2aW5nIiwiRG9jdW1lbnRIZWFkZXIiLCJEb2N1bWVudENvbnRyb2xzIiwiaXNBY2NvdW50VmlldyIsIkRvY3VtZW50RmllbGRzIiwiQWZ0ZXJGaWVsZHMiLCJTZXR0aW5ncyIsImNsYXNzTmFtZSIsIkJlZm9yZUZpZWxkcyIsIkF1dGgiLCJlbWFpbCIsIm9wZXJhdGlvbiIsInJlYWRPbmx5IiwidXNlQVBJS2V5Il0sIm1hcHBpbmdzIjoiOzs7OytCQW9HQTs7O2VBQUE7OzsrREFwR21DOzhCQUNKO2tDQUtFO2dDQUNGO2dDQUNBO3lCQUNNOzZEQUNwQjtvQ0FDa0I7c0JBQ1g7NkRBQ1A7bUNBQ2dCOzhEQUNoQjswQkFDUTtRQUNsQjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRVAsTUFBTUEsWUFBWTtBQU1sQixNQUFNQyxpQkFBb0QsQ0FBQ0M7SUFDekQsTUFBTSxFQUNKQyxNQUFNLEVBQ05DLE1BQU0sRUFDTkMsVUFBVSxFQUNWQyxJQUFJLEVBQ0pDLFVBQVUsRUFDVkMsaUJBQWlCLEVBQ2pCQyxZQUFZLEVBQ1pDLFNBQVMsRUFDVEMsUUFBUUMsZUFBZSxFQUN2QkMsV0FBVyxFQUNaLEdBQUdYO0lBRUosTUFBTSxFQUFFWSxJQUFJLEVBQUVDLE1BQU0sRUFBRSxHQUFHVjtJQUV6QixNQUFNLEVBQUVXLGtCQUFrQixFQUFFLEdBQUdDLElBQUFBLGFBQU87SUFDdEMsTUFBTSxFQUFFQyxDQUFDLEVBQUUsR0FBR0MsSUFBQUEsNEJBQWMsRUFBQztJQUU3QixNQUFNUixTQUFTUyxJQUFBQSxrQkFBVyxFQUFDO1FBQ3pCLE1BQU1KO1FBQ04sSUFBSSxPQUFPSixvQkFBb0IsWUFBWTtZQUN6Q0EsZ0JBQWdCLENBQUM7UUFDbkI7SUFDRixHQUFHO1FBQUNBO1FBQWlCSTtLQUFtQjtJQUV4QyxxQkFDRSw2QkFBQ0ssY0FBSyxDQUFDQyxRQUFRLHNCQUNiLDZCQUFDQyxhQUFJO1FBQUNDLGFBQWFOLEVBQUU7UUFBeUJPLFVBQVVQLEVBQUU7UUFBWVEsT0FBT1IsRUFBRTtzQkFDL0UsNkJBQUNTLDZCQUFvQjtRQUFDQyxNQUFLO1FBQVVDLE1BQU1uQjtRQUFXb0IsTUFBSztRQUMxRCxDQUFDcEIsMkJBQ0EsNkJBQUNxQixtQ0FBZ0IsQ0FBQ0MsUUFBUTtRQUFDQyxPQUFNO3FCQUMvQiw2QkFBQ0MsYUFBSTtRQUNIL0IsUUFBUUE7UUFDUmdDLFVBQVUsQ0FBQzNCO1FBQ1hDLGNBQWNBO1FBQ2QyQixRQUFPO1FBQ1BDLFdBQVcxQjtPQUVWLENBQUVOLENBQUFBLFdBQVdpQyxRQUFRLEVBQUVDLFVBQVVsQyxXQUFXaUMsUUFBUSxFQUFFQyxRQUFRQyxRQUFPLG1CQUNwRSw2QkFBQ0Msc0NBQWtCLHVCQUVyQiw2QkFBQ0MsOEJBQWM7UUFBQ3RDLFFBQVFBO1FBQVFDLFlBQVlBO1FBQVlDLE1BQU1BO3NCQUM5RCw2QkFBQ3FDLGtDQUFnQjtRQUNmdkMsUUFBUUE7UUFDUkMsWUFBWUE7UUFDWkMsTUFBTUE7UUFDTkUsbUJBQW1CQTtRQUNuQm9DLGVBQUFBO1FBQ0EvQixhQUFhQTtzQkFFZiw2QkFBQ2dDLDhCQUFjO1FBQ2JDLDJCQUFhLDZCQUFDQyxrQkFBUTtZQUFDQyxXQUFXLENBQUMsRUFBRWhELFVBQVUsVUFBVSxDQUFDOztRQUMxRGlELDRCQUNFLDZCQUFDQyxjQUFJO1lBQ0hGLFdBQVcsQ0FBQyxFQUFFaEQsVUFBVSxNQUFNLENBQUM7WUFDL0JLLFlBQVlBO1lBQ1o4QyxPQUFPN0MsTUFBTTZDO1lBQ2JDLFdBQVU7WUFDVkMsVUFBVSxDQUFDN0M7WUFDWDhDLFdBQVd4QyxLQUFLd0MsU0FBUzs7UUFHN0IvQyxZQUFZQTtRQUNaUSxRQUFRQTtRQUNSUCxtQkFBbUJBO1FBQ25CSyxhQUFhQTs7QUFPM0I7TUFFQSxXQUFlWiJ9