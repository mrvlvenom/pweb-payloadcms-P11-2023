"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "ToolbarControls", {
    enumerable: true,
    get: function() {
        return ToolbarControls;
    }
});
const _react = /*#__PURE__*/ _interop_require_default(require("react"));
const _ = require("../../../..");
const _ExternalLink = require("../../../../graphics/ExternalLink");
const _context = require("../../Context/context");
const _SizeInput = require("../SizeInput");
require("./index.scss");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
const baseClass = 'live-preview-toolbar-controls';
const ToolbarControls = ()=>{
    const { breakpoint, breakpoints, setBreakpoint, setPreviewWindowType, setZoom, url, zoom } = (0, _context.useLivePreviewContext)();
    return /*#__PURE__*/ _react.default.createElement("div", {
        className: baseClass
    }, breakpoints?.length > 0 && /*#__PURE__*/ _react.default.createElement("select", {
        className: `${baseClass}__breakpoint`,
        name: "live-preview-breakpoint",
        onChange: (e)=>setBreakpoint(e.target.value),
        value: breakpoint
    }, breakpoints.map((bp)=>/*#__PURE__*/ _react.default.createElement("option", {
            key: bp.name,
            value: bp.name
        }, bp.label)), breakpoint === 'custom' && // Dynamically add this option so that it only appears when the width and height inputs are explicitly changed
    // TODO: Translate this string
    /*#__PURE__*/ _react.default.createElement("option", {
        value: "custom"
    }, "Custom")), /*#__PURE__*/ _react.default.createElement("div", {
        className: `${baseClass}__device-size`
    }, /*#__PURE__*/ _react.default.createElement(_SizeInput.PreviewFrameSizeInput, {
        axis: "x"
    }), /*#__PURE__*/ _react.default.createElement("span", {
        className: `${baseClass}__size-divider`
    }, /*#__PURE__*/ _react.default.createElement(_.X, null)), /*#__PURE__*/ _react.default.createElement(_SizeInput.PreviewFrameSizeInput, {
        axis: "y"
    })), /*#__PURE__*/ _react.default.createElement("select", {
        className: `${baseClass}__zoom`,
        onChange: (e)=>setZoom(Number(e.target.value) / 100),
        value: zoom * 100
    }, /*#__PURE__*/ _react.default.createElement("option", {
        value: 50
    }, "50%"), /*#__PURE__*/ _react.default.createElement("option", {
        value: 75
    }, "75%"), /*#__PURE__*/ _react.default.createElement("option", {
        value: 100
    }, "100%"), /*#__PURE__*/ _react.default.createElement("option", {
        value: 125
    }, "125%"), /*#__PURE__*/ _react.default.createElement("option", {
        value: 150
    }, "150%"), /*#__PURE__*/ _react.default.createElement("option", {
        value: 200
    }, "200%")), /*#__PURE__*/ _react.default.createElement("a", {
        className: `${baseClass}__external`,
        href: url,
        onClick: (e)=>{
            e.preventDefault();
            setPreviewWindowType('popup');
        },
        type: "button"
    }, /*#__PURE__*/ _react.default.createElement(_ExternalLink.ExternalLinkIcon, null)));
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3NyYy9hZG1pbi9jb21wb25lbnRzL3ZpZXdzL0xpdmVQcmV2aWV3L1Rvb2xiYXIvQ29udHJvbHMvaW5kZXgudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcblxuaW1wb3J0IHR5cGUgeyBFZGl0Vmlld1Byb3BzIH0gZnJvbSAnLi4vLi4vLi4vdHlwZXMnXG5cbmltcG9ydCB7IFggfSBmcm9tICcuLi8uLi8uLi8uLidcbmltcG9ydCB7IEV4dGVybmFsTGlua0ljb24gfSBmcm9tICcuLi8uLi8uLi8uLi9ncmFwaGljcy9FeHRlcm5hbExpbmsnXG5pbXBvcnQgeyB1c2VMaXZlUHJldmlld0NvbnRleHQgfSBmcm9tICcuLi8uLi9Db250ZXh0L2NvbnRleHQnXG5pbXBvcnQgeyBQcmV2aWV3RnJhbWVTaXplSW5wdXQgfSBmcm9tICcuLi9TaXplSW5wdXQnXG5pbXBvcnQgJy4vaW5kZXguc2NzcydcblxuY29uc3QgYmFzZUNsYXNzID0gJ2xpdmUtcHJldmlldy10b29sYmFyLWNvbnRyb2xzJ1xuXG5leHBvcnQgY29uc3QgVG9vbGJhckNvbnRyb2xzOiBSZWFjdC5GQzxFZGl0Vmlld1Byb3BzPiA9ICgpID0+IHtcbiAgY29uc3QgeyBicmVha3BvaW50LCBicmVha3BvaW50cywgc2V0QnJlYWtwb2ludCwgc2V0UHJldmlld1dpbmRvd1R5cGUsIHNldFpvb20sIHVybCwgem9vbSB9ID1cbiAgICB1c2VMaXZlUHJldmlld0NvbnRleHQoKVxuXG4gIHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9e2Jhc2VDbGFzc30+XG4gICAgICB7YnJlYWtwb2ludHM/Lmxlbmd0aCA+IDAgJiYgKFxuICAgICAgICA8c2VsZWN0XG4gICAgICAgICAgY2xhc3NOYW1lPXtgJHtiYXNlQ2xhc3N9X19icmVha3BvaW50YH1cbiAgICAgICAgICBuYW1lPVwibGl2ZS1wcmV2aWV3LWJyZWFrcG9pbnRcIlxuICAgICAgICAgIG9uQ2hhbmdlPXsoZSkgPT4gc2V0QnJlYWtwb2ludChlLnRhcmdldC52YWx1ZSl9XG4gICAgICAgICAgdmFsdWU9e2JyZWFrcG9pbnR9XG4gICAgICAgID5cbiAgICAgICAgICB7YnJlYWtwb2ludHMubWFwKChicCkgPT4gKFxuICAgICAgICAgICAgPG9wdGlvbiBrZXk9e2JwLm5hbWV9IHZhbHVlPXticC5uYW1lfT5cbiAgICAgICAgICAgICAge2JwLmxhYmVsfVxuICAgICAgICAgICAgPC9vcHRpb24+XG4gICAgICAgICAgKSl9XG4gICAgICAgICAge2JyZWFrcG9pbnQgPT09ICdjdXN0b20nICYmIChcbiAgICAgICAgICAgIC8vIER5bmFtaWNhbGx5IGFkZCB0aGlzIG9wdGlvbiBzbyB0aGF0IGl0IG9ubHkgYXBwZWFycyB3aGVuIHRoZSB3aWR0aCBhbmQgaGVpZ2h0IGlucHV0cyBhcmUgZXhwbGljaXRseSBjaGFuZ2VkXG4gICAgICAgICAgICAvLyBUT0RPOiBUcmFuc2xhdGUgdGhpcyBzdHJpbmdcbiAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCJjdXN0b21cIj5DdXN0b208L29wdGlvbj5cbiAgICAgICAgICApfVxuICAgICAgICA8L3NlbGVjdD5cbiAgICAgICl9XG4gICAgICA8ZGl2IGNsYXNzTmFtZT17YCR7YmFzZUNsYXNzfV9fZGV2aWNlLXNpemVgfT5cbiAgICAgICAgPFByZXZpZXdGcmFtZVNpemVJbnB1dCBheGlzPVwieFwiIC8+XG4gICAgICAgIDxzcGFuIGNsYXNzTmFtZT17YCR7YmFzZUNsYXNzfV9fc2l6ZS1kaXZpZGVyYH0+XG4gICAgICAgICAgPFggLz5cbiAgICAgICAgPC9zcGFuPlxuICAgICAgICA8UHJldmlld0ZyYW1lU2l6ZUlucHV0IGF4aXM9XCJ5XCIgLz5cbiAgICAgIDwvZGl2PlxuICAgICAgPHNlbGVjdFxuICAgICAgICBjbGFzc05hbWU9e2Ake2Jhc2VDbGFzc31fX3pvb21gfVxuICAgICAgICBvbkNoYW5nZT17KGUpID0+IHNldFpvb20oTnVtYmVyKGUudGFyZ2V0LnZhbHVlKSAvIDEwMCl9XG4gICAgICAgIHZhbHVlPXt6b29tICogMTAwfVxuICAgICAgPlxuICAgICAgICA8b3B0aW9uIHZhbHVlPXs1MH0+NTAlPC9vcHRpb24+XG4gICAgICAgIDxvcHRpb24gdmFsdWU9ezc1fT43NSU8L29wdGlvbj5cbiAgICAgICAgPG9wdGlvbiB2YWx1ZT17MTAwfT4xMDAlPC9vcHRpb24+XG4gICAgICAgIDxvcHRpb24gdmFsdWU9ezEyNX0+MTI1JTwvb3B0aW9uPlxuICAgICAgICA8b3B0aW9uIHZhbHVlPXsxNTB9PjE1MCU8L29wdGlvbj5cbiAgICAgICAgPG9wdGlvbiB2YWx1ZT17MjAwfT4yMDAlPC9vcHRpb24+XG4gICAgICA8L3NlbGVjdD5cbiAgICAgIDxhXG4gICAgICAgIGNsYXNzTmFtZT17YCR7YmFzZUNsYXNzfV9fZXh0ZXJuYWxgfVxuICAgICAgICBocmVmPXt1cmx9XG4gICAgICAgIG9uQ2xpY2s9eyhlKSA9PiB7XG4gICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpXG4gICAgICAgICAgc2V0UHJldmlld1dpbmRvd1R5cGUoJ3BvcHVwJylcbiAgICAgICAgfX1cbiAgICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICA+XG4gICAgICAgIDxFeHRlcm5hbExpbmtJY29uIC8+XG4gICAgICA8L2E+XG4gICAgPC9kaXY+XG4gIClcbn1cbiJdLCJuYW1lcyI6WyJUb29sYmFyQ29udHJvbHMiLCJiYXNlQ2xhc3MiLCJicmVha3BvaW50IiwiYnJlYWtwb2ludHMiLCJzZXRCcmVha3BvaW50Iiwic2V0UHJldmlld1dpbmRvd1R5cGUiLCJzZXRab29tIiwidXJsIiwiem9vbSIsInVzZUxpdmVQcmV2aWV3Q29udGV4dCIsImRpdiIsImNsYXNzTmFtZSIsImxlbmd0aCIsInNlbGVjdCIsIm5hbWUiLCJvbkNoYW5nZSIsImUiLCJ0YXJnZXQiLCJ2YWx1ZSIsIm1hcCIsImJwIiwib3B0aW9uIiwia2V5IiwibGFiZWwiLCJQcmV2aWV3RnJhbWVTaXplSW5wdXQiLCJheGlzIiwic3BhbiIsIlgiLCJOdW1iZXIiLCJhIiwiaHJlZiIsIm9uQ2xpY2siLCJwcmV2ZW50RGVmYXVsdCIsInR5cGUiLCJFeHRlcm5hbExpbmtJY29uIl0sIm1hcHBpbmdzIjoiOzs7OytCQVlhQTs7O2VBQUFBOzs7OERBWks7a0JBSUE7OEJBQ2U7eUJBQ0s7MkJBQ0E7UUFDL0I7Ozs7OztBQUVQLE1BQU1DLFlBQVk7QUFFWCxNQUFNRCxrQkFBMkM7SUFDdEQsTUFBTSxFQUFFRSxVQUFVLEVBQUVDLFdBQVcsRUFBRUMsYUFBYSxFQUFFQyxvQkFBb0IsRUFBRUMsT0FBTyxFQUFFQyxHQUFHLEVBQUVDLElBQUksRUFBRSxHQUN4RkMsSUFBQUEsOEJBQXFCO0lBRXZCLHFCQUNFLDZCQUFDQztRQUFJQyxXQUFXVjtPQUNiRSxhQUFhUyxTQUFTLG1CQUNyQiw2QkFBQ0M7UUFDQ0YsV0FBVyxDQUFDLEVBQUVWLFVBQVUsWUFBWSxDQUFDO1FBQ3JDYSxNQUFLO1FBQ0xDLFVBQVUsQ0FBQ0MsSUFBTVosY0FBY1ksRUFBRUMsTUFBTSxDQUFDQyxLQUFLO1FBQzdDQSxPQUFPaEI7T0FFTkMsWUFBWWdCLEdBQUcsQ0FBQyxDQUFDQyxtQkFDaEIsNkJBQUNDO1lBQU9DLEtBQUtGLEdBQUdOLElBQUk7WUFBRUksT0FBT0UsR0FBR04sSUFBSTtXQUNqQ00sR0FBR0csS0FBSyxJQUdackIsZUFBZSxZQUNkLDhHQUE4RztJQUM5Ryw4QkFBOEI7a0JBQzlCLDZCQUFDbUI7UUFBT0gsT0FBTTtPQUFTLDBCQUk3Qiw2QkFBQ1I7UUFBSUMsV0FBVyxDQUFDLEVBQUVWLFVBQVUsYUFBYSxDQUFDO3FCQUN6Qyw2QkFBQ3VCLGdDQUFxQjtRQUFDQyxNQUFLO3NCQUM1Qiw2QkFBQ0M7UUFBS2YsV0FBVyxDQUFDLEVBQUVWLFVBQVUsY0FBYyxDQUFDO3FCQUMzQyw2QkFBQzBCLEdBQUMsd0JBRUosNkJBQUNILGdDQUFxQjtRQUFDQyxNQUFLO3VCQUU5Qiw2QkFBQ1o7UUFDQ0YsV0FBVyxDQUFDLEVBQUVWLFVBQVUsTUFBTSxDQUFDO1FBQy9CYyxVQUFVLENBQUNDLElBQU1WLFFBQVFzQixPQUFPWixFQUFFQyxNQUFNLENBQUNDLEtBQUssSUFBSTtRQUNsREEsT0FBT1YsT0FBTztxQkFFZCw2QkFBQ2E7UUFBT0gsT0FBTztPQUFJLHNCQUNuQiw2QkFBQ0c7UUFBT0gsT0FBTztPQUFJLHNCQUNuQiw2QkFBQ0c7UUFBT0gsT0FBTztPQUFLLHVCQUNwQiw2QkFBQ0c7UUFBT0gsT0FBTztPQUFLLHVCQUNwQiw2QkFBQ0c7UUFBT0gsT0FBTztPQUFLLHVCQUNwQiw2QkFBQ0c7UUFBT0gsT0FBTztPQUFLLHdCQUV0Qiw2QkFBQ1c7UUFDQ2xCLFdBQVcsQ0FBQyxFQUFFVixVQUFVLFVBQVUsQ0FBQztRQUNuQzZCLE1BQU12QjtRQUNOd0IsU0FBUyxDQUFDZjtZQUNSQSxFQUFFZ0IsY0FBYztZQUNoQjNCLHFCQUFxQjtRQUN2QjtRQUNBNEIsTUFBSztxQkFFTCw2QkFBQ0MsOEJBQWdCO0FBSXpCIn0=