"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "Publish", {
    enumerable: true,
    get: function() {
        return Publish;
    }
});
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _reacti18next = require("react-i18next");
const _context = require("../../forms/Form/context");
const _Submit = /*#__PURE__*/ _interop_require_default(require("../../forms/Submit"));
const _DocumentInfo = require("../../utilities/DocumentInfo");
const _RenderCustomComponent = /*#__PURE__*/ _interop_require_default(require("../../utilities/RenderCustomComponent"));
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
const DefaultPublishButton = ({ id, disabled, label, publish })=>{
    return /*#__PURE__*/ _react.default.createElement(_Submit.default, {
        buttonId: id,
        disabled: disabled,
        onClick: publish,
        size: "small",
        type: "button"
    }, label);
};
const Publish = ({ CustomComponent })=>{
    const { publishedDoc, unpublishedVersions } = (0, _DocumentInfo.useDocumentInfo)();
    const { submit } = (0, _context.useForm)();
    const modified = (0, _context.useFormModified)();
    const { t } = (0, _reacti18next.useTranslation)('version');
    const hasNewerVersions = unpublishedVersions?.totalDocs > 0;
    const canPublish = modified || hasNewerVersions || !publishedDoc;
    const publish = (0, _react.useCallback)(()=>{
        submit({
            overrides: {
                _status: 'published'
            }
        });
    }, [
        submit
    ]);
    return /*#__PURE__*/ _react.default.createElement(_RenderCustomComponent.default, {
        CustomComponent: CustomComponent,
        DefaultComponent: DefaultPublishButton,
        componentProps: {
            id: 'action-save',
            DefaultButton: DefaultPublishButton,
            disabled: !canPublish,
            label: t('publishChanges'),
            publish
        }
    });
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9hZG1pbi9jb21wb25lbnRzL2VsZW1lbnRzL1B1Ymxpc2gvaW5kZXgudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VDYWxsYmFjayB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgdXNlVHJhbnNsYXRpb24gfSBmcm9tICdyZWFjdC1pMThuZXh0J1xuXG5pbXBvcnQgeyB1c2VGb3JtLCB1c2VGb3JtTW9kaWZpZWQgfSBmcm9tICcuLi8uLi9mb3Jtcy9Gb3JtL2NvbnRleHQnXG5pbXBvcnQgRm9ybVN1Ym1pdCBmcm9tICcuLi8uLi9mb3Jtcy9TdWJtaXQnXG5pbXBvcnQgeyB1c2VEb2N1bWVudEluZm8gfSBmcm9tICcuLi8uLi91dGlsaXRpZXMvRG9jdW1lbnRJbmZvJ1xuaW1wb3J0IFJlbmRlckN1c3RvbUNvbXBvbmVudCBmcm9tICcuLi8uLi91dGlsaXRpZXMvUmVuZGVyQ3VzdG9tQ29tcG9uZW50J1xuXG5leHBvcnQgdHlwZSBDdXN0b21QdWJsaXNoQnV0dG9uUHJvcHMgPSBSZWFjdC5Db21wb25lbnRUeXBlPFxuICBEZWZhdWx0UHVibGlzaEJ1dHRvblByb3BzICYge1xuICAgIERlZmF1bHRCdXR0b246IFJlYWN0LkNvbXBvbmVudFR5cGU8RGVmYXVsdFB1Ymxpc2hCdXR0b25Qcm9wcz5cbiAgfVxuPlxuZXhwb3J0IHR5cGUgRGVmYXVsdFB1Ymxpc2hCdXR0b25Qcm9wcyA9IHtcbiAgZGlzYWJsZWQ6IGJvb2xlYW5cbiAgaWQ/OiBzdHJpbmdcbiAgbGFiZWw6IHN0cmluZ1xuICBwdWJsaXNoOiAoKSA9PiB2b2lkXG59XG5jb25zdCBEZWZhdWx0UHVibGlzaEJ1dHRvbjogUmVhY3QuRkM8RGVmYXVsdFB1Ymxpc2hCdXR0b25Qcm9wcz4gPSAoe1xuICBpZCxcbiAgZGlzYWJsZWQsXG4gIGxhYmVsLFxuICBwdWJsaXNoLFxufSkgPT4ge1xuICByZXR1cm4gKFxuICAgIDxGb3JtU3VibWl0IGJ1dHRvbklkPXtpZH0gZGlzYWJsZWQ9e2Rpc2FibGVkfSBvbkNsaWNrPXtwdWJsaXNofSBzaXplPVwic21hbGxcIiB0eXBlPVwiYnV0dG9uXCI+XG4gICAgICB7bGFiZWx9XG4gICAgPC9Gb3JtU3VibWl0PlxuICApXG59XG5cbnR5cGUgUHJvcHMgPSB7XG4gIEN1c3RvbUNvbXBvbmVudD86IEN1c3RvbVB1Ymxpc2hCdXR0b25Qcm9wc1xufVxuXG5leHBvcnQgY29uc3QgUHVibGlzaDogUmVhY3QuRkM8UHJvcHM+ID0gKHsgQ3VzdG9tQ29tcG9uZW50IH0pID0+IHtcbiAgY29uc3QgeyBwdWJsaXNoZWREb2MsIHVucHVibGlzaGVkVmVyc2lvbnMgfSA9IHVzZURvY3VtZW50SW5mbygpXG4gIGNvbnN0IHsgc3VibWl0IH0gPSB1c2VGb3JtKClcbiAgY29uc3QgbW9kaWZpZWQgPSB1c2VGb3JtTW9kaWZpZWQoKVxuICBjb25zdCB7IHQgfSA9IHVzZVRyYW5zbGF0aW9uKCd2ZXJzaW9uJylcblxuICBjb25zdCBoYXNOZXdlclZlcnNpb25zID0gdW5wdWJsaXNoZWRWZXJzaW9ucz8udG90YWxEb2NzID4gMFxuICBjb25zdCBjYW5QdWJsaXNoID0gbW9kaWZpZWQgfHwgaGFzTmV3ZXJWZXJzaW9ucyB8fCAhcHVibGlzaGVkRG9jXG5cbiAgY29uc3QgcHVibGlzaCA9IHVzZUNhbGxiYWNrKCgpID0+IHtcbiAgICBzdWJtaXQoe1xuICAgICAgb3ZlcnJpZGVzOiB7XG4gICAgICAgIF9zdGF0dXM6ICdwdWJsaXNoZWQnLFxuICAgICAgfSxcbiAgICB9KVxuICB9LCBbc3VibWl0XSlcblxuICByZXR1cm4gKFxuICAgIDxSZW5kZXJDdXN0b21Db21wb25lbnRcbiAgICAgIEN1c3RvbUNvbXBvbmVudD17Q3VzdG9tQ29tcG9uZW50fVxuICAgICAgRGVmYXVsdENvbXBvbmVudD17RGVmYXVsdFB1Ymxpc2hCdXR0b259XG4gICAgICBjb21wb25lbnRQcm9wcz17e1xuICAgICAgICBpZDogJ2FjdGlvbi1zYXZlJyxcbiAgICAgICAgRGVmYXVsdEJ1dHRvbjogRGVmYXVsdFB1Ymxpc2hCdXR0b24sXG4gICAgICAgIGRpc2FibGVkOiAhY2FuUHVibGlzaCxcbiAgICAgICAgbGFiZWw6IHQoJ3B1Ymxpc2hDaGFuZ2VzJyksXG4gICAgICAgIHB1Ymxpc2gsXG4gICAgICB9fVxuICAgIC8+XG4gIClcbn1cbiJdLCJuYW1lcyI6WyJQdWJsaXNoIiwiRGVmYXVsdFB1Ymxpc2hCdXR0b24iLCJpZCIsImRpc2FibGVkIiwibGFiZWwiLCJwdWJsaXNoIiwiRm9ybVN1Ym1pdCIsImJ1dHRvbklkIiwib25DbGljayIsInNpemUiLCJ0eXBlIiwiQ3VzdG9tQ29tcG9uZW50IiwicHVibGlzaGVkRG9jIiwidW5wdWJsaXNoZWRWZXJzaW9ucyIsInVzZURvY3VtZW50SW5mbyIsInN1Ym1pdCIsInVzZUZvcm0iLCJtb2RpZmllZCIsInVzZUZvcm1Nb2RpZmllZCIsInQiLCJ1c2VUcmFuc2xhdGlvbiIsImhhc05ld2VyVmVyc2lvbnMiLCJ0b3RhbERvY3MiLCJjYW5QdWJsaXNoIiwidXNlQ2FsbGJhY2siLCJvdmVycmlkZXMiLCJfc3RhdHVzIiwiUmVuZGVyQ3VzdG9tQ29tcG9uZW50IiwiRGVmYXVsdENvbXBvbmVudCIsImNvbXBvbmVudFByb3BzIiwiRGVmYXVsdEJ1dHRvbiJdLCJtYXBwaW5ncyI6Ijs7OzsrQkFvQ2FBOzs7ZUFBQUE7OzsrREFwQ3NCOzhCQUNKO3lCQUVVOytEQUNsQjs4QkFDUzs4RUFDRTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBYWxDLE1BQU1DLHVCQUE0RCxDQUFDLEVBQ2pFQyxFQUFFLEVBQ0ZDLFFBQVEsRUFDUkMsS0FBSyxFQUNMQyxPQUFPLEVBQ1I7SUFDQyxxQkFDRSw2QkFBQ0MsZUFBVTtRQUFDQyxVQUFVTDtRQUFJQyxVQUFVQTtRQUFVSyxTQUFTSDtRQUFTSSxNQUFLO1FBQVFDLE1BQUs7T0FDL0VOO0FBR1A7QUFNTyxNQUFNSixVQUEyQixDQUFDLEVBQUVXLGVBQWUsRUFBRTtJQUMxRCxNQUFNLEVBQUVDLFlBQVksRUFBRUMsbUJBQW1CLEVBQUUsR0FBR0MsSUFBQUEsNkJBQWU7SUFDN0QsTUFBTSxFQUFFQyxNQUFNLEVBQUUsR0FBR0MsSUFBQUEsZ0JBQU87SUFDMUIsTUFBTUMsV0FBV0MsSUFBQUEsd0JBQWU7SUFDaEMsTUFBTSxFQUFFQyxDQUFDLEVBQUUsR0FBR0MsSUFBQUEsNEJBQWMsRUFBQztJQUU3QixNQUFNQyxtQkFBbUJSLHFCQUFxQlMsWUFBWTtJQUMxRCxNQUFNQyxhQUFhTixZQUFZSSxvQkFBb0IsQ0FBQ1Q7SUFFcEQsTUFBTVAsVUFBVW1CLElBQUFBLGtCQUFXLEVBQUM7UUFDMUJULE9BQU87WUFDTFUsV0FBVztnQkFDVEMsU0FBUztZQUNYO1FBQ0Y7SUFDRixHQUFHO1FBQUNYO0tBQU87SUFFWCxxQkFDRSw2QkFBQ1ksOEJBQXFCO1FBQ3BCaEIsaUJBQWlCQTtRQUNqQmlCLGtCQUFrQjNCO1FBQ2xCNEIsZ0JBQWdCO1lBQ2QzQixJQUFJO1lBQ0o0QixlQUFlN0I7WUFDZkUsVUFBVSxDQUFDb0I7WUFDWG5CLE9BQU9lLEVBQUU7WUFDVGQ7UUFDRjs7QUFHTiJ9