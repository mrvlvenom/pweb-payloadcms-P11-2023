"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
const _react = /*#__PURE__*/ _interop_require_default(require("react"));
const _reacti18next = require("react-i18next");
const _getTranslation = require("../../../../../utilities/getTranslation");
const _Error = /*#__PURE__*/ _interop_require_default(require("../../Error"));
const _FieldDescription = /*#__PURE__*/ _interop_require_default(require("../../FieldDescription"));
const _Label = /*#__PURE__*/ _interop_require_default(require("../../Label"));
require("./index.scss");
const _shared = require("../shared");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
const TextInput = (props)=>{
    const { className, description, errorMessage, inputRef, label, onChange, onKeyDown, path, placeholder, readOnly, required, rtl, showError, style, value, width } = props;
    const { i18n } = (0, _reacti18next.useTranslation)();
    return /*#__PURE__*/ _react.default.createElement("div", {
        className: [
            _shared.fieldBaseClass,
            'text',
            className,
            showError && 'error',
            readOnly && 'read-only'
        ].filter(Boolean).join(' '),
        style: {
            ...style,
            width
        }
    }, /*#__PURE__*/ _react.default.createElement(_Error.default, {
        message: errorMessage,
        showError: showError
    }), /*#__PURE__*/ _react.default.createElement(_Label.default, {
        htmlFor: `field-${path.replace(/\./g, '__')}`,
        label: label,
        required: required
    }), /*#__PURE__*/ _react.default.createElement("input", {
        "data-rtl": rtl,
        disabled: readOnly,
        id: `field-${path.replace(/\./g, '__')}`,
        name: path,
        onChange: onChange,
        onKeyDown: onKeyDown,
        placeholder: (0, _getTranslation.getTranslation)(placeholder, i18n),
        ref: inputRef,
        type: "text",
        value: value || ''
    }), /*#__PURE__*/ _react.default.createElement(_FieldDescription.default, {
        className: `field-description-${path.replace(/\./g, '__')}`,
        description: description,
        value: value
    }));
};
const _default = TextInput;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9hZG1pbi9jb21wb25lbnRzL2Zvcm1zL2ZpZWxkLXR5cGVzL1RleHQvSW5wdXQudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHsgQ2hhbmdlRXZlbnQgfSBmcm9tICdyZWFjdCdcblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgdXNlVHJhbnNsYXRpb24gfSBmcm9tICdyZWFjdC1pMThuZXh0J1xuXG5pbXBvcnQgdHlwZSB7IFRleHRGaWVsZCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL2ZpZWxkcy9jb25maWcvdHlwZXMnXG5pbXBvcnQgdHlwZSB7IERlc2NyaXB0aW9uIH0gZnJvbSAnLi4vLi4vRmllbGREZXNjcmlwdGlvbi90eXBlcydcblxuaW1wb3J0IHsgZ2V0VHJhbnNsYXRpb24gfSBmcm9tICcuLi8uLi8uLi8uLi8uLi91dGlsaXRpZXMvZ2V0VHJhbnNsYXRpb24nXG5pbXBvcnQgRXJyb3IgZnJvbSAnLi4vLi4vRXJyb3InXG5pbXBvcnQgRmllbGREZXNjcmlwdGlvbiBmcm9tICcuLi8uLi9GaWVsZERlc2NyaXB0aW9uJ1xuaW1wb3J0IExhYmVsIGZyb20gJy4uLy4uL0xhYmVsJ1xuaW1wb3J0ICcuL2luZGV4LnNjc3MnXG5pbXBvcnQgeyBmaWVsZEJhc2VDbGFzcyB9IGZyb20gJy4uL3NoYXJlZCdcblxuZXhwb3J0IHR5cGUgVGV4dElucHV0UHJvcHMgPSBPbWl0PFRleHRGaWVsZCwgJ3R5cGUnPiAmIHtcbiAgY2xhc3NOYW1lPzogc3RyaW5nXG4gIGRlc2NyaXB0aW9uPzogRGVzY3JpcHRpb25cbiAgZXJyb3JNZXNzYWdlPzogc3RyaW5nXG4gIGlucHV0UmVmPzogUmVhY3QuTXV0YWJsZVJlZk9iamVjdDxIVE1MSW5wdXRFbGVtZW50PlxuICBvbkNoYW5nZT86IChlOiBDaGFuZ2VFdmVudDxIVE1MSW5wdXRFbGVtZW50PikgPT4gdm9pZFxuICBvbktleURvd24/OiBSZWFjdC5LZXlib2FyZEV2ZW50SGFuZGxlcjxIVE1MSW5wdXRFbGVtZW50PlxuICBwYXRoOiBzdHJpbmdcbiAgcGxhY2Vob2xkZXI/OiBSZWNvcmQ8c3RyaW5nLCBzdHJpbmc+IHwgc3RyaW5nXG4gIHJlYWRPbmx5PzogYm9vbGVhblxuICByZXF1aXJlZD86IGJvb2xlYW5cbiAgcnRsPzogYm9vbGVhblxuICBzaG93RXJyb3I/OiBib29sZWFuXG4gIHN0eWxlPzogUmVhY3QuQ1NTUHJvcGVydGllc1xuICB2YWx1ZT86IHN0cmluZ1xuICB3aWR0aD86IHN0cmluZ1xufVxuXG5jb25zdCBUZXh0SW5wdXQ6IFJlYWN0LkZDPFRleHRJbnB1dFByb3BzPiA9IChwcm9wcykgPT4ge1xuICBjb25zdCB7XG4gICAgY2xhc3NOYW1lLFxuICAgIGRlc2NyaXB0aW9uLFxuICAgIGVycm9yTWVzc2FnZSxcbiAgICBpbnB1dFJlZixcbiAgICBsYWJlbCxcbiAgICBvbkNoYW5nZSxcbiAgICBvbktleURvd24sXG4gICAgcGF0aCxcbiAgICBwbGFjZWhvbGRlcixcbiAgICByZWFkT25seSxcbiAgICByZXF1aXJlZCxcbiAgICBydGwsXG4gICAgc2hvd0Vycm9yLFxuICAgIHN0eWxlLFxuICAgIHZhbHVlLFxuICAgIHdpZHRoLFxuICB9ID0gcHJvcHNcblxuICBjb25zdCB7IGkxOG4gfSA9IHVzZVRyYW5zbGF0aW9uKClcblxuICByZXR1cm4gKFxuICAgIDxkaXZcbiAgICAgIGNsYXNzTmFtZT17W2ZpZWxkQmFzZUNsYXNzLCAndGV4dCcsIGNsYXNzTmFtZSwgc2hvd0Vycm9yICYmICdlcnJvcicsIHJlYWRPbmx5ICYmICdyZWFkLW9ubHknXVxuICAgICAgICAuZmlsdGVyKEJvb2xlYW4pXG4gICAgICAgIC5qb2luKCcgJyl9XG4gICAgICBzdHlsZT17e1xuICAgICAgICAuLi5zdHlsZSxcbiAgICAgICAgd2lkdGgsXG4gICAgICB9fVxuICAgID5cbiAgICAgIDxFcnJvciBtZXNzYWdlPXtlcnJvck1lc3NhZ2V9IHNob3dFcnJvcj17c2hvd0Vycm9yfSAvPlxuICAgICAgPExhYmVsIGh0bWxGb3I9e2BmaWVsZC0ke3BhdGgucmVwbGFjZSgvXFwuL2csICdfXycpfWB9IGxhYmVsPXtsYWJlbH0gcmVxdWlyZWQ9e3JlcXVpcmVkfSAvPlxuICAgICAgPGlucHV0XG4gICAgICAgIGRhdGEtcnRsPXtydGx9XG4gICAgICAgIGRpc2FibGVkPXtyZWFkT25seX1cbiAgICAgICAgaWQ9e2BmaWVsZC0ke3BhdGgucmVwbGFjZSgvXFwuL2csICdfXycpfWB9XG4gICAgICAgIG5hbWU9e3BhdGh9XG4gICAgICAgIG9uQ2hhbmdlPXtvbkNoYW5nZX1cbiAgICAgICAgb25LZXlEb3duPXtvbktleURvd259XG4gICAgICAgIHBsYWNlaG9sZGVyPXtnZXRUcmFuc2xhdGlvbihwbGFjZWhvbGRlciwgaTE4bil9XG4gICAgICAgIHJlZj17aW5wdXRSZWZ9XG4gICAgICAgIHR5cGU9XCJ0ZXh0XCJcbiAgICAgICAgdmFsdWU9e3ZhbHVlIHx8ICcnfVxuICAgICAgLz5cbiAgICAgIDxGaWVsZERlc2NyaXB0aW9uXG4gICAgICAgIGNsYXNzTmFtZT17YGZpZWxkLWRlc2NyaXB0aW9uLSR7cGF0aC5yZXBsYWNlKC9cXC4vZywgJ19fJyl9YH1cbiAgICAgICAgZGVzY3JpcHRpb249e2Rlc2NyaXB0aW9ufVxuICAgICAgICB2YWx1ZT17dmFsdWV9XG4gICAgICAvPlxuICAgIDwvZGl2PlxuICApXG59XG5cbmV4cG9ydCBkZWZhdWx0IFRleHRJbnB1dFxuIl0sIm5hbWVzIjpbIlRleHRJbnB1dCIsInByb3BzIiwiY2xhc3NOYW1lIiwiZGVzY3JpcHRpb24iLCJlcnJvck1lc3NhZ2UiLCJpbnB1dFJlZiIsImxhYmVsIiwib25DaGFuZ2UiLCJvbktleURvd24iLCJwYXRoIiwicGxhY2Vob2xkZXIiLCJyZWFkT25seSIsInJlcXVpcmVkIiwicnRsIiwic2hvd0Vycm9yIiwic3R5bGUiLCJ2YWx1ZSIsIndpZHRoIiwiaTE4biIsInVzZVRyYW5zbGF0aW9uIiwiZGl2IiwiZmllbGRCYXNlQ2xhc3MiLCJmaWx0ZXIiLCJCb29sZWFuIiwiam9pbiIsIkVycm9yIiwibWVzc2FnZSIsIkxhYmVsIiwiaHRtbEZvciIsInJlcGxhY2UiLCJpbnB1dCIsImRhdGEtcnRsIiwiZGlzYWJsZWQiLCJpZCIsIm5hbWUiLCJnZXRUcmFuc2xhdGlvbiIsInJlZiIsInR5cGUiLCJGaWVsZERlc2NyaXB0aW9uIl0sIm1hcHBpbmdzIjoiOzs7OytCQXdGQTs7O2VBQUE7Ozs4REF0RmtCOzhCQUNhO2dDQUtBOzhEQUNiO3lFQUNXOzhEQUNYO1FBQ1g7d0JBQ3dCOzs7Ozs7QUFvQi9CLE1BQU1BLFlBQXNDLENBQUNDO0lBQzNDLE1BQU0sRUFDSkMsU0FBUyxFQUNUQyxXQUFXLEVBQ1hDLFlBQVksRUFDWkMsUUFBUSxFQUNSQyxLQUFLLEVBQ0xDLFFBQVEsRUFDUkMsU0FBUyxFQUNUQyxJQUFJLEVBQ0pDLFdBQVcsRUFDWEMsUUFBUSxFQUNSQyxRQUFRLEVBQ1JDLEdBQUcsRUFDSEMsU0FBUyxFQUNUQyxLQUFLLEVBQ0xDLEtBQUssRUFDTEMsS0FBSyxFQUNOLEdBQUdoQjtJQUVKLE1BQU0sRUFBRWlCLElBQUksRUFBRSxHQUFHQyxJQUFBQSw0QkFBYztJQUUvQixxQkFDRSw2QkFBQ0M7UUFDQ2xCLFdBQVc7WUFBQ21CLHNCQUFjO1lBQUU7WUFBUW5CO1lBQVdZLGFBQWE7WUFBU0gsWUFBWTtTQUFZLENBQzFGVyxNQUFNLENBQUNDLFNBQ1BDLElBQUksQ0FBQztRQUNSVCxPQUFPO1lBQ0wsR0FBR0EsS0FBSztZQUNSRTtRQUNGO3FCQUVBLDZCQUFDUSxjQUFLO1FBQUNDLFNBQVN0QjtRQUFjVSxXQUFXQTtzQkFDekMsNkJBQUNhLGNBQUs7UUFBQ0MsU0FBUyxDQUFDLE1BQU0sRUFBRW5CLEtBQUtvQixPQUFPLENBQUMsT0FBTyxNQUFNLENBQUM7UUFBRXZCLE9BQU9BO1FBQU9NLFVBQVVBO3NCQUM5RSw2QkFBQ2tCO1FBQ0NDLFlBQVVsQjtRQUNWbUIsVUFBVXJCO1FBQ1ZzQixJQUFJLENBQUMsTUFBTSxFQUFFeEIsS0FBS29CLE9BQU8sQ0FBQyxPQUFPLE1BQU0sQ0FBQztRQUN4Q0ssTUFBTXpCO1FBQ05GLFVBQVVBO1FBQ1ZDLFdBQVdBO1FBQ1hFLGFBQWF5QixJQUFBQSw4QkFBYyxFQUFDekIsYUFBYVE7UUFDekNrQixLQUFLL0I7UUFDTGdDLE1BQUs7UUFDTHJCLE9BQU9BLFNBQVM7c0JBRWxCLDZCQUFDc0IseUJBQWdCO1FBQ2ZwQyxXQUFXLENBQUMsa0JBQWtCLEVBQUVPLEtBQUtvQixPQUFPLENBQUMsT0FBTyxNQUFNLENBQUM7UUFDM0QxQixhQUFhQTtRQUNiYSxPQUFPQTs7QUFJZjtNQUVBLFdBQWVoQiJ9