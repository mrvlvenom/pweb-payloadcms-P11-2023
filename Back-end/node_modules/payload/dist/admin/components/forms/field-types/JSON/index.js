"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _validations = require("../../../../../fields/validations");
const _CodeEditor = require("../../../elements/CodeEditor");
const _Error = /*#__PURE__*/ _interop_require_default(require("../../Error"));
const _FieldDescription = /*#__PURE__*/ _interop_require_default(require("../../FieldDescription"));
const _Label = /*#__PURE__*/ _interop_require_default(require("../../Label"));
const _useField = /*#__PURE__*/ _interop_require_default(require("../../useField"));
const _withCondition = /*#__PURE__*/ _interop_require_default(require("../../withCondition"));
require("./index.scss");
const _shared = require("../shared");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
const baseClass = 'json-field';
const JSONField = (props)=>{
    const { name, admin: { className, condition, description, editorOptions, readOnly, style, width } = {}, label, path: pathFromProps, required, validate = _validations.json } = props;
    const path = pathFromProps || name;
    const [stringValue, setStringValue] = (0, _react.useState)();
    const [jsonError, setJsonError] = (0, _react.useState)();
    const memoizedValidate = (0, _react.useCallback)((value, options)=>{
        return validate(value, {
            ...options,
            jsonError,
            required
        });
    }, [
        validate,
        required,
        jsonError
    ]);
    const { errorMessage, initialValue, setValue, showError, value } = (0, _useField.default)({
        condition,
        path,
        validate: memoizedValidate
    });
    const handleChange = (0, _react.useCallback)((val)=>{
        if (readOnly) return;
        setStringValue(val);
        try {
            setValue(JSON.parse(val.trim() || '{}'));
            setJsonError(undefined);
        } catch (e) {
            setJsonError(e);
        }
    }, [
        readOnly,
        setValue,
        setStringValue
    ]);
    (0, _react.useEffect)(()=>{
        setStringValue(JSON.stringify(initialValue, null, 2));
    }, [
        initialValue
    ]);
    return /*#__PURE__*/ _react.default.createElement("div", {
        className: [
            _shared.fieldBaseClass,
            baseClass,
            className,
            showError && 'error',
            readOnly && 'read-only'
        ].filter(Boolean).join(' '),
        style: {
            ...style,
            width
        }
    }, /*#__PURE__*/ _react.default.createElement(_Error.default, {
        message: errorMessage,
        showError: showError
    }), /*#__PURE__*/ _react.default.createElement(_Label.default, {
        htmlFor: `field-${path}`,
        label: label,
        required: required
    }), /*#__PURE__*/ _react.default.createElement(_CodeEditor.CodeEditor, {
        defaultLanguage: "json",
        onChange: handleChange,
        options: editorOptions,
        readOnly: readOnly,
        value: stringValue
    }), /*#__PURE__*/ _react.default.createElement(_FieldDescription.default, {
        description: description,
        value: value
    }));
};
const _default = (0, _withCondition.default)(JSONField);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9hZG1pbi9jb21wb25lbnRzL2Zvcm1zL2ZpZWxkLXR5cGVzL0pTT04vaW5kZXgudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VDYWxsYmFjaywgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0J1xuXG5pbXBvcnQgdHlwZSB7IFByb3BzIH0gZnJvbSAnLi90eXBlcydcblxuaW1wb3J0IHsganNvbiB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL2ZpZWxkcy92YWxpZGF0aW9ucydcbmltcG9ydCB7IENvZGVFZGl0b3IgfSBmcm9tICcuLi8uLi8uLi9lbGVtZW50cy9Db2RlRWRpdG9yJ1xuaW1wb3J0IEVycm9yIGZyb20gJy4uLy4uL0Vycm9yJ1xuaW1wb3J0IEZpZWxkRGVzY3JpcHRpb24gZnJvbSAnLi4vLi4vRmllbGREZXNjcmlwdGlvbidcbmltcG9ydCBMYWJlbCBmcm9tICcuLi8uLi9MYWJlbCdcbmltcG9ydCB1c2VGaWVsZCBmcm9tICcuLi8uLi91c2VGaWVsZCdcbmltcG9ydCB3aXRoQ29uZGl0aW9uIGZyb20gJy4uLy4uL3dpdGhDb25kaXRpb24nXG5pbXBvcnQgJy4vaW5kZXguc2NzcydcbmltcG9ydCB7IGZpZWxkQmFzZUNsYXNzIH0gZnJvbSAnLi4vc2hhcmVkJ1xuXG5jb25zdCBiYXNlQ2xhc3MgPSAnanNvbi1maWVsZCdcblxuY29uc3QgSlNPTkZpZWxkOiBSZWFjdC5GQzxQcm9wcz4gPSAocHJvcHMpID0+IHtcbiAgY29uc3Qge1xuICAgIG5hbWUsXG4gICAgYWRtaW46IHsgY2xhc3NOYW1lLCBjb25kaXRpb24sIGRlc2NyaXB0aW9uLCBlZGl0b3JPcHRpb25zLCByZWFkT25seSwgc3R5bGUsIHdpZHRoIH0gPSB7fSxcbiAgICBsYWJlbCxcbiAgICBwYXRoOiBwYXRoRnJvbVByb3BzLFxuICAgIHJlcXVpcmVkLFxuICAgIHZhbGlkYXRlID0ganNvbixcbiAgfSA9IHByb3BzXG5cbiAgY29uc3QgcGF0aCA9IHBhdGhGcm9tUHJvcHMgfHwgbmFtZVxuICBjb25zdCBbc3RyaW5nVmFsdWUsIHNldFN0cmluZ1ZhbHVlXSA9IHVzZVN0YXRlPHN0cmluZz4oKVxuICBjb25zdCBbanNvbkVycm9yLCBzZXRKc29uRXJyb3JdID0gdXNlU3RhdGU8c3RyaW5nPigpXG5cbiAgY29uc3QgbWVtb2l6ZWRWYWxpZGF0ZSA9IHVzZUNhbGxiYWNrKFxuICAgICh2YWx1ZSwgb3B0aW9ucykgPT4ge1xuICAgICAgcmV0dXJuIHZhbGlkYXRlKHZhbHVlLCB7IC4uLm9wdGlvbnMsIGpzb25FcnJvciwgcmVxdWlyZWQgfSlcbiAgICB9LFxuICAgIFt2YWxpZGF0ZSwgcmVxdWlyZWQsIGpzb25FcnJvcl0sXG4gIClcblxuICBjb25zdCB7IGVycm9yTWVzc2FnZSwgaW5pdGlhbFZhbHVlLCBzZXRWYWx1ZSwgc2hvd0Vycm9yLCB2YWx1ZSB9ID0gdXNlRmllbGQ8c3RyaW5nPih7XG4gICAgY29uZGl0aW9uLFxuICAgIHBhdGgsXG4gICAgdmFsaWRhdGU6IG1lbW9pemVkVmFsaWRhdGUsXG4gIH0pXG5cbiAgY29uc3QgaGFuZGxlQ2hhbmdlID0gdXNlQ2FsbGJhY2soXG4gICAgKHZhbCkgPT4ge1xuICAgICAgaWYgKHJlYWRPbmx5KSByZXR1cm5cbiAgICAgIHNldFN0cmluZ1ZhbHVlKHZhbClcblxuICAgICAgdHJ5IHtcbiAgICAgICAgc2V0VmFsdWUoSlNPTi5wYXJzZSh2YWwudHJpbSgpIHx8ICd7fScpKVxuICAgICAgICBzZXRKc29uRXJyb3IodW5kZWZpbmVkKVxuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICBzZXRKc29uRXJyb3IoZSlcbiAgICAgIH1cbiAgICB9LFxuICAgIFtyZWFkT25seSwgc2V0VmFsdWUsIHNldFN0cmluZ1ZhbHVlXSxcbiAgKVxuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgc2V0U3RyaW5nVmFsdWUoSlNPTi5zdHJpbmdpZnkoaW5pdGlhbFZhbHVlLCBudWxsLCAyKSlcbiAgfSwgW2luaXRpYWxWYWx1ZV0pXG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2XG4gICAgICBjbGFzc05hbWU9e1tcbiAgICAgICAgZmllbGRCYXNlQ2xhc3MsXG4gICAgICAgIGJhc2VDbGFzcyxcbiAgICAgICAgY2xhc3NOYW1lLFxuICAgICAgICBzaG93RXJyb3IgJiYgJ2Vycm9yJyxcbiAgICAgICAgcmVhZE9ubHkgJiYgJ3JlYWQtb25seScsXG4gICAgICBdXG4gICAgICAgIC5maWx0ZXIoQm9vbGVhbilcbiAgICAgICAgLmpvaW4oJyAnKX1cbiAgICAgIHN0eWxlPXt7XG4gICAgICAgIC4uLnN0eWxlLFxuICAgICAgICB3aWR0aCxcbiAgICAgIH19XG4gICAgPlxuICAgICAgPEVycm9yIG1lc3NhZ2U9e2Vycm9yTWVzc2FnZX0gc2hvd0Vycm9yPXtzaG93RXJyb3J9IC8+XG4gICAgICA8TGFiZWwgaHRtbEZvcj17YGZpZWxkLSR7cGF0aH1gfSBsYWJlbD17bGFiZWx9IHJlcXVpcmVkPXtyZXF1aXJlZH0gLz5cbiAgICAgIDxDb2RlRWRpdG9yXG4gICAgICAgIGRlZmF1bHRMYW5ndWFnZT1cImpzb25cIlxuICAgICAgICBvbkNoYW5nZT17aGFuZGxlQ2hhbmdlfVxuICAgICAgICBvcHRpb25zPXtlZGl0b3JPcHRpb25zfVxuICAgICAgICByZWFkT25seT17cmVhZE9ubHl9XG4gICAgICAgIHZhbHVlPXtzdHJpbmdWYWx1ZX1cbiAgICAgIC8+XG4gICAgICA8RmllbGREZXNjcmlwdGlvbiBkZXNjcmlwdGlvbj17ZGVzY3JpcHRpb259IHZhbHVlPXt2YWx1ZX0gLz5cbiAgICA8L2Rpdj5cbiAgKVxufVxuXG5leHBvcnQgZGVmYXVsdCB3aXRoQ29uZGl0aW9uKEpTT05GaWVsZClcbiJdLCJuYW1lcyI6WyJiYXNlQ2xhc3MiLCJKU09ORmllbGQiLCJwcm9wcyIsIm5hbWUiLCJhZG1pbiIsImNsYXNzTmFtZSIsImNvbmRpdGlvbiIsImRlc2NyaXB0aW9uIiwiZWRpdG9yT3B0aW9ucyIsInJlYWRPbmx5Iiwic3R5bGUiLCJ3aWR0aCIsImxhYmVsIiwicGF0aCIsInBhdGhGcm9tUHJvcHMiLCJyZXF1aXJlZCIsInZhbGlkYXRlIiwianNvbiIsInN0cmluZ1ZhbHVlIiwic2V0U3RyaW5nVmFsdWUiLCJ1c2VTdGF0ZSIsImpzb25FcnJvciIsInNldEpzb25FcnJvciIsIm1lbW9pemVkVmFsaWRhdGUiLCJ1c2VDYWxsYmFjayIsInZhbHVlIiwib3B0aW9ucyIsImVycm9yTWVzc2FnZSIsImluaXRpYWxWYWx1ZSIsInNldFZhbHVlIiwic2hvd0Vycm9yIiwidXNlRmllbGQiLCJoYW5kbGVDaGFuZ2UiLCJ2YWwiLCJKU09OIiwicGFyc2UiLCJ0cmltIiwidW5kZWZpbmVkIiwiZSIsInVzZUVmZmVjdCIsInN0cmluZ2lmeSIsImRpdiIsImZpZWxkQmFzZUNsYXNzIiwiZmlsdGVyIiwiQm9vbGVhbiIsImpvaW4iLCJFcnJvciIsIm1lc3NhZ2UiLCJMYWJlbCIsImh0bWxGb3IiLCJDb2RlRWRpdG9yIiwiZGVmYXVsdExhbmd1YWdlIiwib25DaGFuZ2UiLCJGaWVsZERlc2NyaXB0aW9uIiwid2l0aENvbmRpdGlvbiJdLCJtYXBwaW5ncyI6Ijs7OzsrQkE0RkE7OztlQUFBOzs7K0RBNUZ3RDs2QkFJbkM7NEJBQ007OERBQ1Q7eUVBQ1c7OERBQ1g7aUVBQ0c7c0VBQ0s7UUFDbkI7d0JBQ3dCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFL0IsTUFBTUEsWUFBWTtBQUVsQixNQUFNQyxZQUE2QixDQUFDQztJQUNsQyxNQUFNLEVBQ0pDLElBQUksRUFDSkMsT0FBTyxFQUFFQyxTQUFTLEVBQUVDLFNBQVMsRUFBRUMsV0FBVyxFQUFFQyxhQUFhLEVBQUVDLFFBQVEsRUFBRUMsS0FBSyxFQUFFQyxLQUFLLEVBQUUsR0FBRyxDQUFDLENBQUMsRUFDeEZDLEtBQUssRUFDTEMsTUFBTUMsYUFBYSxFQUNuQkMsUUFBUSxFQUNSQyxXQUFXQyxpQkFBSSxFQUNoQixHQUFHZjtJQUVKLE1BQU1XLE9BQU9DLGlCQUFpQlg7SUFDOUIsTUFBTSxDQUFDZSxhQUFhQyxlQUFlLEdBQUdDLElBQUFBLGVBQVE7SUFDOUMsTUFBTSxDQUFDQyxXQUFXQyxhQUFhLEdBQUdGLElBQUFBLGVBQVE7SUFFMUMsTUFBTUcsbUJBQW1CQyxJQUFBQSxrQkFBVyxFQUNsQyxDQUFDQyxPQUFPQztRQUNOLE9BQU9WLFNBQVNTLE9BQU87WUFBRSxHQUFHQyxPQUFPO1lBQUVMO1lBQVdOO1FBQVM7SUFDM0QsR0FDQTtRQUFDQztRQUFVRDtRQUFVTTtLQUFVO0lBR2pDLE1BQU0sRUFBRU0sWUFBWSxFQUFFQyxZQUFZLEVBQUVDLFFBQVEsRUFBRUMsU0FBUyxFQUFFTCxLQUFLLEVBQUUsR0FBR00sSUFBQUEsaUJBQVEsRUFBUztRQUNsRnpCO1FBQ0FPO1FBQ0FHLFVBQVVPO0lBQ1o7SUFFQSxNQUFNUyxlQUFlUixJQUFBQSxrQkFBVyxFQUM5QixDQUFDUztRQUNDLElBQUl4QixVQUFVO1FBQ2RVLGVBQWVjO1FBRWYsSUFBSTtZQUNGSixTQUFTSyxLQUFLQyxLQUFLLENBQUNGLElBQUlHLElBQUksTUFBTTtZQUNsQ2QsYUFBYWU7UUFDZixFQUFFLE9BQU9DLEdBQUc7WUFDVmhCLGFBQWFnQjtRQUNmO0lBQ0YsR0FDQTtRQUFDN0I7UUFBVW9CO1FBQVVWO0tBQWU7SUFHdENvQixJQUFBQSxnQkFBUyxFQUFDO1FBQ1JwQixlQUFlZSxLQUFLTSxTQUFTLENBQUNaLGNBQWMsTUFBTTtJQUNwRCxHQUFHO1FBQUNBO0tBQWE7SUFFakIscUJBQ0UsNkJBQUNhO1FBQ0NwQyxXQUFXO1lBQ1RxQyxzQkFBYztZQUNkMUM7WUFDQUs7WUFDQXlCLGFBQWE7WUFDYnJCLFlBQVk7U0FDYixDQUNFa0MsTUFBTSxDQUFDQyxTQUNQQyxJQUFJLENBQUM7UUFDUm5DLE9BQU87WUFDTCxHQUFHQSxLQUFLO1lBQ1JDO1FBQ0Y7cUJBRUEsNkJBQUNtQyxjQUFLO1FBQUNDLFNBQVNwQjtRQUFjRyxXQUFXQTtzQkFDekMsNkJBQUNrQixjQUFLO1FBQUNDLFNBQVMsQ0FBQyxNQUFNLEVBQUVwQyxLQUFLLENBQUM7UUFBRUQsT0FBT0E7UUFBT0csVUFBVUE7c0JBQ3pELDZCQUFDbUMsc0JBQVU7UUFDVEMsaUJBQWdCO1FBQ2hCQyxVQUFVcEI7UUFDVk4sU0FBU2xCO1FBQ1RDLFVBQVVBO1FBQ1ZnQixPQUFPUDtzQkFFVCw2QkFBQ21DLHlCQUFnQjtRQUFDOUMsYUFBYUE7UUFBYWtCLE9BQU9BOztBQUd6RDtNQUVBLFdBQWU2QixJQUFBQSxzQkFBYSxFQUFDckQifQ==