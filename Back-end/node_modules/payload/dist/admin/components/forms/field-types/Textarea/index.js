"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _reacti18next = require("react-i18next");
const _validations = require("../../../../../fields/validations");
const _getTranslation = require("../../../../../utilities/getTranslation");
const _Config = require("../../../utilities/Config");
const _Locale = require("../../../utilities/Locale");
const _useField = /*#__PURE__*/ _interop_require_default(require("../../useField"));
const _withCondition = /*#__PURE__*/ _interop_require_default(require("../../withCondition"));
const _shared = require("../shared");
const _Input = /*#__PURE__*/ _interop_require_default(require("./Input"));
require("./index.scss");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
const Textarea = (props)=>{
    const { name, admin: { className, condition, description, placeholder, readOnly, rows, rtl, style, width } = {}, label, localized, maxLength, minLength, path: pathFromProps, required, validate = _validations.textarea } = props;
    const { i18n } = (0, _reacti18next.useTranslation)();
    const path = pathFromProps || name;
    const locale = (0, _Locale.useLocale)();
    const { localization } = (0, _Config.useConfig)();
    const isRTL = (0, _shared.isFieldRTL)({
        fieldLocalized: localized,
        fieldRTL: rtl,
        locale,
        localizationConfig: localization || undefined
    });
    const memoizedValidate = (0, _react.useCallback)((value, options)=>{
        return validate(value, {
            ...options,
            maxLength,
            minLength,
            required
        });
    }, [
        validate,
        required,
        maxLength,
        minLength
    ]);
    const { errorMessage, setValue, showError, value } = (0, _useField.default)({
        condition,
        path,
        validate: memoizedValidate
    });
    return /*#__PURE__*/ _react.default.createElement(_Input.default, {
        className: className,
        description: description,
        errorMessage: errorMessage,
        label: label,
        name: name,
        onChange: (e)=>{
            setValue(e.target.value);
        },
        path: path,
        placeholder: (0, _getTranslation.getTranslation)(placeholder, i18n),
        readOnly: readOnly,
        required: required,
        rows: rows,
        rtl: isRTL,
        showError: showError,
        style: style,
        value: value,
        width: width
    });
};
const _default = (0, _withCondition.default)(Textarea);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9hZG1pbi9jb21wb25lbnRzL2Zvcm1zL2ZpZWxkLXR5cGVzL1RleHRhcmVhL2luZGV4LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlQ2FsbGJhY2sgfSBmcm9tICdyZWFjdCdcbmltcG9ydCB7IHVzZVRyYW5zbGF0aW9uIH0gZnJvbSAncmVhY3QtaTE4bmV4dCdcblxuaW1wb3J0IHR5cGUgeyBQcm9wcyB9IGZyb20gJy4vdHlwZXMnXG5cbmltcG9ydCB7IHRleHRhcmVhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vZmllbGRzL3ZhbGlkYXRpb25zJ1xuaW1wb3J0IHsgZ2V0VHJhbnNsYXRpb24gfSBmcm9tICcuLi8uLi8uLi8uLi8uLi91dGlsaXRpZXMvZ2V0VHJhbnNsYXRpb24nXG5pbXBvcnQgeyB1c2VDb25maWcgfSBmcm9tICcuLi8uLi8uLi91dGlsaXRpZXMvQ29uZmlnJ1xuaW1wb3J0IHsgdXNlTG9jYWxlIH0gZnJvbSAnLi4vLi4vLi4vdXRpbGl0aWVzL0xvY2FsZSdcbmltcG9ydCB1c2VGaWVsZCBmcm9tICcuLi8uLi91c2VGaWVsZCdcbmltcG9ydCB3aXRoQ29uZGl0aW9uIGZyb20gJy4uLy4uL3dpdGhDb25kaXRpb24nXG5pbXBvcnQgeyBpc0ZpZWxkUlRMIH0gZnJvbSAnLi4vc2hhcmVkJ1xuaW1wb3J0IFRleHRhcmVhSW5wdXQgZnJvbSAnLi9JbnB1dCdcbmltcG9ydCAnLi9pbmRleC5zY3NzJ1xuXG5jb25zdCBUZXh0YXJlYTogUmVhY3QuRkM8UHJvcHM+ID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IHtcbiAgICBuYW1lLFxuICAgIGFkbWluOiB7XG4gICAgICBjbGFzc05hbWUsXG4gICAgICBjb25kaXRpb24sXG4gICAgICBkZXNjcmlwdGlvbixcbiAgICAgIHBsYWNlaG9sZGVyLFxuICAgICAgcmVhZE9ubHksXG4gICAgICByb3dzLFxuICAgICAgcnRsLFxuICAgICAgc3R5bGUsXG4gICAgICB3aWR0aCxcbiAgICB9ID0ge30sXG4gICAgbGFiZWwsXG4gICAgbG9jYWxpemVkLFxuICAgIG1heExlbmd0aCxcbiAgICBtaW5MZW5ndGgsXG4gICAgcGF0aDogcGF0aEZyb21Qcm9wcyxcbiAgICByZXF1aXJlZCxcbiAgICB2YWxpZGF0ZSA9IHRleHRhcmVhLFxuICB9ID0gcHJvcHNcblxuICBjb25zdCB7IGkxOG4gfSA9IHVzZVRyYW5zbGF0aW9uKClcblxuICBjb25zdCBwYXRoID0gcGF0aEZyb21Qcm9wcyB8fCBuYW1lXG5cbiAgY29uc3QgbG9jYWxlID0gdXNlTG9jYWxlKClcblxuICBjb25zdCB7IGxvY2FsaXphdGlvbiB9ID0gdXNlQ29uZmlnKClcbiAgY29uc3QgaXNSVEwgPSBpc0ZpZWxkUlRMKHtcbiAgICBmaWVsZExvY2FsaXplZDogbG9jYWxpemVkLFxuICAgIGZpZWxkUlRMOiBydGwsXG4gICAgbG9jYWxlLFxuICAgIGxvY2FsaXphdGlvbkNvbmZpZzogbG9jYWxpemF0aW9uIHx8IHVuZGVmaW5lZCxcbiAgfSlcbiAgY29uc3QgbWVtb2l6ZWRWYWxpZGF0ZSA9IHVzZUNhbGxiYWNrKFxuICAgICh2YWx1ZSwgb3B0aW9ucykgPT4ge1xuICAgICAgcmV0dXJuIHZhbGlkYXRlKHZhbHVlLCB7IC4uLm9wdGlvbnMsIG1heExlbmd0aCwgbWluTGVuZ3RoLCByZXF1aXJlZCB9KVxuICAgIH0sXG4gICAgW3ZhbGlkYXRlLCByZXF1aXJlZCwgbWF4TGVuZ3RoLCBtaW5MZW5ndGhdLFxuICApXG5cbiAgY29uc3QgeyBlcnJvck1lc3NhZ2UsIHNldFZhbHVlLCBzaG93RXJyb3IsIHZhbHVlIH0gPSB1c2VGaWVsZCh7XG4gICAgY29uZGl0aW9uLFxuICAgIHBhdGgsXG4gICAgdmFsaWRhdGU6IG1lbW9pemVkVmFsaWRhdGUsXG4gIH0pXG5cbiAgcmV0dXJuIChcbiAgICA8VGV4dGFyZWFJbnB1dFxuICAgICAgY2xhc3NOYW1lPXtjbGFzc05hbWV9XG4gICAgICBkZXNjcmlwdGlvbj17ZGVzY3JpcHRpb259XG4gICAgICBlcnJvck1lc3NhZ2U9e2Vycm9yTWVzc2FnZX1cbiAgICAgIGxhYmVsPXtsYWJlbH1cbiAgICAgIG5hbWU9e25hbWV9XG4gICAgICBvbkNoYW5nZT17KGUpID0+IHtcbiAgICAgICAgc2V0VmFsdWUoZS50YXJnZXQudmFsdWUpXG4gICAgICB9fVxuICAgICAgcGF0aD17cGF0aH1cbiAgICAgIHBsYWNlaG9sZGVyPXtnZXRUcmFuc2xhdGlvbihwbGFjZWhvbGRlciwgaTE4bil9XG4gICAgICByZWFkT25seT17cmVhZE9ubHl9XG4gICAgICByZXF1aXJlZD17cmVxdWlyZWR9XG4gICAgICByb3dzPXtyb3dzfVxuICAgICAgcnRsPXtpc1JUTH1cbiAgICAgIHNob3dFcnJvcj17c2hvd0Vycm9yfVxuICAgICAgc3R5bGU9e3N0eWxlfVxuICAgICAgdmFsdWU9e3ZhbHVlIGFzIHN0cmluZ31cbiAgICAgIHdpZHRoPXt3aWR0aH1cbiAgICAvPlxuICApXG59XG5leHBvcnQgZGVmYXVsdCB3aXRoQ29uZGl0aW9uKFRleHRhcmVhKVxuIl0sIm5hbWVzIjpbIlRleHRhcmVhIiwicHJvcHMiLCJuYW1lIiwiYWRtaW4iLCJjbGFzc05hbWUiLCJjb25kaXRpb24iLCJkZXNjcmlwdGlvbiIsInBsYWNlaG9sZGVyIiwicmVhZE9ubHkiLCJyb3dzIiwicnRsIiwic3R5bGUiLCJ3aWR0aCIsImxhYmVsIiwibG9jYWxpemVkIiwibWF4TGVuZ3RoIiwibWluTGVuZ3RoIiwicGF0aCIsInBhdGhGcm9tUHJvcHMiLCJyZXF1aXJlZCIsInZhbGlkYXRlIiwidGV4dGFyZWEiLCJpMThuIiwidXNlVHJhbnNsYXRpb24iLCJsb2NhbGUiLCJ1c2VMb2NhbGUiLCJsb2NhbGl6YXRpb24iLCJ1c2VDb25maWciLCJpc1JUTCIsImlzRmllbGRSVEwiLCJmaWVsZExvY2FsaXplZCIsImZpZWxkUlRMIiwibG9jYWxpemF0aW9uQ29uZmlnIiwidW5kZWZpbmVkIiwibWVtb2l6ZWRWYWxpZGF0ZSIsInVzZUNhbGxiYWNrIiwidmFsdWUiLCJvcHRpb25zIiwiZXJyb3JNZXNzYWdlIiwic2V0VmFsdWUiLCJzaG93RXJyb3IiLCJ1c2VGaWVsZCIsIlRleHRhcmVhSW5wdXQiLCJvbkNoYW5nZSIsImUiLCJ0YXJnZXQiLCJnZXRUcmFuc2xhdGlvbiIsIndpdGhDb25kaXRpb24iXSwibWFwcGluZ3MiOiI7Ozs7K0JBdUZBOzs7ZUFBQTs7OytEQXZGbUM7OEJBQ0o7NkJBSU47Z0NBQ007d0JBQ0w7d0JBQ0E7aUVBQ0w7c0VBQ0s7d0JBQ0M7OERBQ0Q7UUFDbkI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUVQLE1BQU1BLFdBQTRCLENBQUNDO0lBQ2pDLE1BQU0sRUFDSkMsSUFBSSxFQUNKQyxPQUFPLEVBQ0xDLFNBQVMsRUFDVEMsU0FBUyxFQUNUQyxXQUFXLEVBQ1hDLFdBQVcsRUFDWEMsUUFBUSxFQUNSQyxJQUFJLEVBQ0pDLEdBQUcsRUFDSEMsS0FBSyxFQUNMQyxLQUFLLEVBQ04sR0FBRyxDQUFDLENBQUMsRUFDTkMsS0FBSyxFQUNMQyxTQUFTLEVBQ1RDLFNBQVMsRUFDVEMsU0FBUyxFQUNUQyxNQUFNQyxhQUFhLEVBQ25CQyxRQUFRLEVBQ1JDLFdBQVdDLHFCQUFRLEVBQ3BCLEdBQUdwQjtJQUVKLE1BQU0sRUFBRXFCLElBQUksRUFBRSxHQUFHQyxJQUFBQSw0QkFBYztJQUUvQixNQUFNTixPQUFPQyxpQkFBaUJoQjtJQUU5QixNQUFNc0IsU0FBU0MsSUFBQUEsaUJBQVM7SUFFeEIsTUFBTSxFQUFFQyxZQUFZLEVBQUUsR0FBR0MsSUFBQUEsaUJBQVM7SUFDbEMsTUFBTUMsUUFBUUMsSUFBQUEsa0JBQVUsRUFBQztRQUN2QkMsZ0JBQWdCaEI7UUFDaEJpQixVQUFVckI7UUFDVmM7UUFDQVEsb0JBQW9CTixnQkFBZ0JPO0lBQ3RDO0lBQ0EsTUFBTUMsbUJBQW1CQyxJQUFBQSxrQkFBVyxFQUNsQyxDQUFDQyxPQUFPQztRQUNOLE9BQU9qQixTQUFTZ0IsT0FBTztZQUFFLEdBQUdDLE9BQU87WUFBRXRCO1lBQVdDO1lBQVdHO1FBQVM7SUFDdEUsR0FDQTtRQUFDQztRQUFVRDtRQUFVSjtRQUFXQztLQUFVO0lBRzVDLE1BQU0sRUFBRXNCLFlBQVksRUFBRUMsUUFBUSxFQUFFQyxTQUFTLEVBQUVKLEtBQUssRUFBRSxHQUFHSyxJQUFBQSxpQkFBUSxFQUFDO1FBQzVEcEM7UUFDQVk7UUFDQUcsVUFBVWM7SUFDWjtJQUVBLHFCQUNFLDZCQUFDUSxjQUFhO1FBQ1p0QyxXQUFXQTtRQUNYRSxhQUFhQTtRQUNiZ0MsY0FBY0E7UUFDZHpCLE9BQU9BO1FBQ1BYLE1BQU1BO1FBQ055QyxVQUFVLENBQUNDO1lBQ1RMLFNBQVNLLEVBQUVDLE1BQU0sQ0FBQ1QsS0FBSztRQUN6QjtRQUNBbkIsTUFBTUE7UUFDTlYsYUFBYXVDLElBQUFBLDhCQUFjLEVBQUN2QyxhQUFhZTtRQUN6Q2QsVUFBVUE7UUFDVlcsVUFBVUE7UUFDVlYsTUFBTUE7UUFDTkMsS0FBS2tCO1FBQ0xZLFdBQVdBO1FBQ1g3QixPQUFPQTtRQUNQeUIsT0FBT0E7UUFDUHhCLE9BQU9BOztBQUdiO01BQ0EsV0FBZW1DLElBQUFBLHNCQUFhLEVBQUMvQyJ9